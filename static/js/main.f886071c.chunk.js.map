{"version":3,"sources":["logo.svg","Components/Options.js","Components/Keywords.js","Components/InputValueController.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Options","props","sentences","brand","loc","map","s","Keywords","keywords","join","InputValueController","title","value","onChange","App","useState","setBrand","brandLocation","setBrandLocation","className","src","logo","alt","event","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,kC,gLCgC5BC,G,MA7BC,SAACC,GAEf,IAAMC,EAAY,CAACD,EAAME,MAAQ,OAASF,EAAMG,IAAM,+GACtDH,EAAME,MAAQ,yDAA2DF,EAAMG,IAAM,2DACrF,2CAA6CH,EAAME,MAAQ,aAAeF,EAAMG,IAAM,2EACtFH,EAAME,MAAQ,oBAAuBF,EAAMG,IAAK,0HAChDH,EAAME,MAAQ,cAAgBF,EAAMG,IAAM,gHAC1CH,EAAME,MAAQ,kDAAoDF,EAAMG,IAAM,sDAC9E,uEAAyEH,EAAME,MAAO,uEACtF,gCAAkCF,EAAMG,IAAM,mCAAsCH,EAAME,MAAO,0CACjG,uGAAyGF,EAAME,MAAQ,UACvH,6BAA+BF,EAAMG,IAAM,0FAA4FH,EAAME,MAC7IF,EAAME,MAAQ,iJACd,kEAAoEF,EAAME,MAAQ,wDAA0DF,EAAMG,IAClJH,EAAME,MAAQ,qCAAuCF,EAAMG,IAAM,sEACjEH,EAAME,MAAQ,sEAAwEF,EAAMG,IAAM,oCAClGH,EAAME,MAAQ,2EAA6EF,EAAMG,IAAM,gDACvG,wCAA0CH,EAAME,MAAQ,wCAA0CF,EAAMG,IAAM,4BAE9G,OACI,6BACI,6DACA,4BACKF,EAAUG,KAAI,SAACC,GAAD,OAAO,4BAAKA,UCX1BC,EAbE,SAACN,GACd,IAAIO,EAAW,CAAC,sBAAuB,qBAAsB,iCAAkC,wBAC/F,UAAWP,EAAMG,IAAM,UAAW,cAAe,mBAAoB,kBAAmB,gBAExF,OACI,6BACI,wCACA,2BAAII,EAASC,UCGVC,EAVc,SAACT,GAE9B,OACI,6BACI,4BAAKA,EAAMU,OACX,2BAAOC,MAAOX,EAAMW,MAAOC,SAAUZ,EAAMY,aCkDpCC,MAlDf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENZ,EAFM,KAECa,EAFD,OAG6BD,mBAAS,IAHtC,mBAGNE,EAHM,KAGSC,EAHT,KAeb,OAEE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,6BACE,0CACA,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,UAG3C,8BAEE,yBAAKH,UAAU,kBAEb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAsBR,MAAM,QAAQC,MAAOT,EAAOU,SAxBpC,SAACU,GAEzBP,EAASO,EAAMC,OAAOZ,WAyBd,yBAAKO,UAAU,cACb,kBAAC,EAAD,CAAsBR,MAAM,WAAWC,MAAOK,EAAeJ,SAvBvC,SAACU,GAEjCL,EAAiBK,EAAMC,OAAOZ,YAyBxB,6BACE,6BAAS,6BACT,kBAAC,EAAD,CAAUR,IAAKa,IACf,6BACA,kBAAC,EAAD,CAASb,IAAKa,EAAed,MAAOA,SCpC5BsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f886071c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\n\r\n\r\nconst Options = (props) => {\r\n\r\n  const sentences = [props.brand + ' is ' + props.loc + '\\'s top Roofing Contractor. Contact us today to get an estimate on your next roof replacement or roof repair!',\r\n  props.brand + ' is the leading residential roofing contractor in the ' + props.loc + ' area. Contact us today about your next roofing project!',\r\n  'Experienced, reliable roofers near you. ' + props.brand + ' provides ' + props.loc + ' with roof repair & replacement, backed by outstanding customer service.',\r\n  props.brand + ' is your trusted '  + props.loc +' Roofing Contractor. Whether you need roofing, siding, gutters or windows we can assist. Call for your free inspection!',\r\n  props.brand + ' is one of ' + props.loc + '\\'s leading Roofing Contractors. We specialize in everything from Residential to Commercial. Contact us today!', \r\n  props.brand + ' is the leader in Shingle Roof Replacement for ' + props.loc + 'areas. Contact us and schedule your estimate today!', \r\n  'Are you looking to permanently replace your roof for the last time? '+  props.brand +' has you covered! Contact us today about our Metal Roofing Services!', \r\n  'For a quality roof repair in ' + props.loc + ' and the surrounding areas, call' +  props.brand +'. We fix roofs with precision and care.', \r\n  'Having an expert perform an in-depth roof inspection can save both your roof & your wallet. Contact ' + props.brand + ' today!', \r\n  'For a roof replacement in ' + props.loc + ' completed using quality materials and the best in workmanship and customer care, call ' + props.brand, \r\n  props.brand + ' offers a wide variety of roof maintenance and roof repair services to help protect your home or business\\'s roof before bigger problems arise.', \r\n  'A roof leak can cause serious damage to your home or business. ' + props.brand + ' offers reliable and prompt roof leak repairs around ' + props.loc, \r\n  props.brand + ' provides roof replacement in the ' + props.loc + '. You can count on integrity, hard work, and quality craftsmanship.', \r\n  props.brand + ' is the trusted name for high-quality shingle roof replacements in ' + props.loc + '. Contact us today to learn more!', \r\n  props.brand + ' is the leading Roofing Contractor offering Roof Repair Services in the ' + props.loc + ' area. Contact us for a free roof inspection!',\r\n  'We work with your insurance company! ' + props.brand + ' offers shingle roof replacements in ' + props.loc + '& the surrounding areas.']\r\n\r\n  return (\r\n      <div>\r\n          <h2>Title & Description Option(s)</h2>\r\n          <ul>\r\n              {sentences.map((s) => <li>{s}</li>)}\r\n          </ul>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Options;\r\n","import React from 'react';\r\n\r\nconst Keywords = (props) => {\r\n    var keywords = ['residential roofing', 'roofing contractor', 'residential roofing contractor', 'local roofing company', \r\n    'roofing', props.loc + ' roofer', 'roof repair', 'roof replacement', 'shingle roofing', 'tile roofing'];\r\n\r\n    return (\r\n        <div>\r\n            <h2>Keywords</h2>\r\n            <p>{keywords.join()}</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Keywords;\r\n","import React from 'react';\r\n\r\nconst InputValueController = (props) => \r\n{\r\nreturn (\r\n    <div>\r\n        <h2>{props.title}</h2>\r\n        <input value={props.value} onChange={props.onChange}></input>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default InputValueController;","import React, { useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Options from './Components/Options';\r\nimport Keywords from './Components/Keywords';\r\nimport InputValueController from './Components/InputValueController'\r\n\r\nfunction App() {\r\n\r\n  const [brand, setBrand] = useState('');\r\n  const [brandLocation, setBrandLocation] = useState('');\r\n\r\n  const handleBrandChange = (event) => \r\n  {\r\n    setBrand(event.target.value);\r\n  }\r\n\r\n  const handleBrandLocationChange = (event) => \r\n  {\r\n    setBrandLocation(event.target.value);\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div>\r\n          <h1>gmb-autofy</h1>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </div>\r\n\r\n        <body>\r\n\r\n          <div className=\"flex-container\">\r\n\r\n            <div className=\"flex-child\">\r\n              <InputValueController title=\"Brand\" value={brand} onChange={handleBrandChange} />\r\n            </div>\r\n\r\n            <div className=\"flex-child\">\r\n              <InputValueController title=\"Location\" value={brandLocation} onChange={handleBrandLocationChange} />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <br></br><br></br>\r\n            <Keywords loc={brandLocation} />\r\n            <br></br>\r\n            <Options loc={brandLocation} brand={brand} />\r\n          </div>\r\n        </body>\r\n      </header>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}